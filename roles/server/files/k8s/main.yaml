apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: http-ingress
  annotations:
    isskubernetes.io/ingress.class: "traefik"
    cert-manager.io/cluster-issuer: "lets-encrypt-issuer"
spec:
  tls:
    - secretName: haus-travisjeffery-com-tls
      hosts:
        - 'haus.travisjeffery.com'
        - 'deluge.haus.travisjeffery.com'
        - 'plex.haus.travisjeffery.com'
        - 'syncthing.haus.travisjeffery.com'
  rules:
    - host: plex.haus.travisjeffery.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: plex
                port:
                  number: 80
    - host: deluge.haus.travisjeffery.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: deluge
                port:
                  number: 80
    - host: syncthing.haus.travisjeffery.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: syncthing
                port:
                  number: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: showrss-to-magnet
  labels:
    app.kubernetes.io/name: showrss-to-magnet
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: showrss-to-magnet
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: showrss-to-magnet
    spec:
      containers:
        - name: showrss-to-magnet
          image: travisjeffery/showrss-to-magnet:0.0.7
          args:
            - --rss
            - http://showrss.info./user/244543.rss?magnets=true&namespaces=true&name=null&quality=null&re=null
          env:
            - name: RUST_BACKTRACE
              value: "1"
          volumeMounts:
            - mountPath: /dst
              name: dst
      volumes:
        - name: dst
          hostPath:
            path: /mnt/data/Downloads/Magnets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plex
  labels:
    app.kubernetes.io/name: plex
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: plex
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: plex
    spec:
      hostNetwork: true
      containers:
        - name: plex
          image: linuxserver/plex:version-1.21.0.3711-b509cc236
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: VERSION
              value: "docker"
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /tv
              name: tv
            - mountPath: /movies
              name: movies
      volumes:
        - name: config
          hostPath:
            path: /mnt/data/Plex
        - name: tv
          hostPath:
            path: /mnt/data/Television
        - name: movies
          hostPath:
            path: /mnt/data/Movies
---
apiVersion: v1
kind: Service
metadata:
  name: plex
  annotations:
    external-dns.alpha.kubernetes.io/access: private
  labels:
    app.kubernetes.io/name: plex
spec:
  ports:
    - port: 80
      targetPort: 32400
  selector:
    app.kubernetes.io/name: plex
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deluge
  labels:
    app.kubernetes.io/name: deluge
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: deluge
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: deluge
    spec:
      hostNetwork: true
      containers:
        - name: deluge
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: DELUGE_LOGLEVEL
              value: "DEBUG"
          image: linuxserver/deluge:2.1.1-r8-ls245
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /downloads
              name: downloads
      volumes:
        - name: config
          hostPath:
            path: /home/tj/.config/deluge
        - name: downloads
          hostPath:
            path: /mnt/data
---
apiVersion: v1
kind: Service
metadata:
  name: deluge
  annotations:
    external-dns.alpha.kubernetes.io/access: private
  labels:
    app.kubernetes.io/name: deluge
spec:
  ports:
    - port: 80
      targetPort: 8112
  selector:
    app.kubernetes.io/name: deluge
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: syncthing
  labels:
    app.kubernetes.io/name: syncthing
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: syncthing
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: syncthing
    spec:
      hostNetwork: true
      containers:
        - name: syncthing
          ports:
            - containerPort: 8384
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          image: linuxserver/syncthing
          volumeMounts:
            - mountPath: /config
              name: config
      volumes:
        - name: config
          hostPath:
            path: /mnt/data/Sync
---
apiVersion: v1
kind: Service
metadata:
  name: syncthing
  annotations:
    external-dns.alpha.kubernetes.io/access: private
  labels:
    app.kubernetes.io/name: syncthing
spec:
  ports:
    - port: 80
      targetPort: 8384
  selector:
    app.kubernetes.io/name: syncthing
