- name: current user
  debug: msg="{{ lookup('env','USER') }}"
- name: home dir
  debug: msg="{{ ansible_env.HOME }}"
- name: playbook dir
  debug: msg="{{ playbook_dir }}"
- name: install packages
  become: yes
  yay:
    name:
      - google-chrome
      - zsh
      - redshift
      - docker
      - docker-compose
      - zoom
      - ripgrep
      - rustup
      - cups
      - ttf-roboto-mono
      - ttf-fira-code
      - libnotify
    state: present
- name: install rust
  shell: "{{ item }}"
  with_items:
    - rustup default nightly
    - rustup component add rust-src
- name: make zsh default shell
  shell: chsh -s /bin/zsh tj
  tags: shellchange
  become: true
- name: start docker service
  service:
    name: docker
    state: started
  become: true
- name: use emacs keybinds
  lineinfile:
    dest="{{ item.file }}"
    regexp="{{ item.line }}"
    line="{{ item.line }}"
    state=present
  with_items:
    - { line: 'gtk-key-theme-name="Emacs"', file: "{{ ansible_env.HOME }}/.gtkrc-2.0" }
    - { line: 'gtk-key-theme-name=Emacs', file: "{{ ansible_env.HOME }}/.config/gtk-3.0/settings.ini" }
- name: clone goenv
  become: no
  git:
    repo: https://github.com/syndbg/goenv.git
    version: master
    dest: "{{ ansible_env.HOME }}/.goenv"
    accept_hostkey: yes
- name: find dotfiles
  find:
    paths: "{{ playbook_dir }}"
    hidden: true
  register: dotfiles
- name: install dotfiles
  become: true
  file:
    src: "{{ item.path }}"
    dest: "{{ ansible_env.HOME }}/{{ item.path | basename }}"
    state: link
  with_items: "{{ dotfiles.files }}"
- name: find org files
  find:
    paths: "{{ sync_dir }}"
    hidden: true
    patterns:
      - "*.org"
  register: orgfiles
  when: sync_dir != ""
- name: install orgfiles
  become: true
  file:
    src: "{{ item.path }}"
    dest: "{{ ansible_env.HOME }}/{{ item.path | basename }}"
    state: link
  with_items: "{{ orgfiles.files }}"
  when: sync_dir != ""
- name: find homedirs
  find:
    paths: "{{ sync_dir }}"
    hidden: true
    excludes:
      - ".stfolder"
  register: homedirs
  when: sync_dir != ""
- name: install homedirs
  become: true
  file:
    src: "{{ item.path }}"
    dest: "{{ ansible_env.HOME }}/{{ item.path | basename }}"
    state: link
  with_items: "{{ homedirs.files }}"
  when: sync_dir != ""

  
